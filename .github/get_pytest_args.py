#!/usr/bin/env python3
# SPDX-FileCopyrightText: 2024 Espressif Systems (Shanghai) CO LTD
# SPDX-License-Identifier: Apache-2.0

import argparse
import json
import glob


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-v', '--verbose', action='store_true', help='Enable verbose output')
    parser.add_argument('--target', type=str, required=True, help='Target to run tests for')
    parser.add_argument('build_info_json', type=str, help='Input file(s) containing build info generated by idf-build-apps. Accepts globs.')
    parser.add_argument('pytest_args', type=argparse.FileType('w'), help='Output file containing pytest arguments')

    args = parser.parse_args()
    pytest_args = []
    app_json_files = glob.glob(args.build_info_json)
    if args.verbose:
        print(f'Found {len(app_json_files)} app_json files')
        for app_json_file in app_json_files:
            print(f'  - {app_json_file}')
    for app_json_file in app_json_files:
        with open(app_json_file, 'r') as build_info_json:
            if args.verbose:
                print(f'Processing {app_json_file}')
            for app_json_line in build_info_json.readlines():
                app_json = json.loads(app_json_line)
                skip = False
                if app_json['target'] != args.target:
                    continue
                if app_json['build_status'] == 'skipped':
                    if args.verbose:
                        print(f'Skipping {app_json["app_dir"]})')
                    pytest_args += [
                        '--ignore',
                        app_json['app_dir']
                    ]
                else:
                    if args.verbose:
                        print(f'Not skipping {app_json["app_dir"]})')


    args.pytest_args.write(' '.join(pytest_args))


if __name__ == '__main__':
    main()
